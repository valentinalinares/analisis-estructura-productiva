) +
theme_minimal(base_size = 11) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
plot.subtitle = element_text(hjust = 0.5, size = 10),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
axis.title = element_text(size = 10)
)
# Convertir el gráfico a interactivo con plotly
grafico_servicios_interactivo <- ggplotly(grafico_servicios_comparativo, tooltip = "text")
# Mostrar el gráfico interactivo
print(grafico_servicios_interactivo)
# 1. Procesamiento de datos para varios países, sector Servicios y rango de años específico
# Países seleccionados (los mismos que tenías)
paises_seleccionados <- c("PER", "ARG", "CHL", "COL", "BRA", "MEX")
anio_inicio <- 1988
anio_fin <- 2018
sector_analizado <- "Servicios"
anio_evento <- 1995
etiqueta_evento <- "Acceso a internet en incremento"
datos_procesados_servicios <- datos %>%
filter(iso3 %in% paises_seleccionados) %>%         # Filtrar por los países seleccionados
filter(anio >= anio_inicio & anio <= anio_fin) %>% # Filtrar por el rango de años
filter(gran_sector == sector_analizado) %>%        # Filtrar solo por el sector "Servicios"
group_by(iso3, anio, gran_sector) %>%              # Agrupar por país, año y gran sector
summarise(
empleo_total_gran_sector = sum(empleo_miles, na.rm = TRUE), # Empleo total para el sector Servicios
.groups = 'drop'
) %>%
# Necesitamos el empleo total ANUAL del PAÍS para calcular la proporción correctamente
# Para ello, primero calculamos el empleo total por país y año (sumando Bienes y Servicios)
# y luego lo unimos para calcular la proporción del sector Servicios.
left_join(
datos %>%
filter(iso3 %in% paises_seleccionados) %>%
filter(anio >= anio_inicio & anio <= anio_fin) %>%
group_by(iso3, anio) %>%
summarise(empleo_total_anual_pais_global = sum(empleo_miles, na.rm = TRUE), .groups = 'drop'),
by = c("iso3", "anio")
) %>%
mutate(
# Evitar división por cero si empleo_total_anual_pais_global es 0 o NA
proporcion_servicios_en_pais = ifelse(is.na(empleo_total_anual_pais_global) | empleo_total_anual_pais_global == 0,
0,
empleo_total_gran_sector / empleo_total_anual_pais_global)
) %>%
ungroup() %>%
filter(!is.na(proporcion_servicios_en_pais)) # Eliminar filas donde la proporción no se pudo calcular
# Verificar los datos procesados (opcional)
# print(head(datos_procesados_servicios))
# print(paste("Años únicos:", paste(sort(unique(datos_procesados_servicios$anio)), collapse=", ")))
# print(paste("Países únicos:", paste(unique(datos_procesados_servicios$iso3), collapse=", ")))
# print(summary(datos_procesados_servicios$proporcion_servicios_en_pais))
# 2. Creación del gráfico con ggplot2
if (nrow(datos_procesados_servicios) == 0) {
# Se detiene la ejecución si no hay datos, en lugar de solo mostrar un mensaje.
stop("No hay datos disponibles para el sector 'Servicios', los países y el rango de años seleccionados. No se puede generar el gráfico.")
} else {
grafico_servicios_comparativo <- ggplot(datos_procesados_servicios,
aes(x = anio,
y = proporcion_servicios_en_pais,
color = iso3, # Color por país
group = iso3, # Agrupar por país para líneas correctas
# Definir text para tooltip personalizado en plotly
text = paste("País:", iso3,
"<br>Año:", anio,
"<br>Sector:", gran_sector,
"<br>Proporción en Empleo Total del País:", scales::percent(proporcion_servicios_en_pais, accuracy = 0.1))
)) +
geom_line(linewidth = 0.8, alpha = 0.9) +
# geom_point(size = 1.5, alpha = 0.6) + # Opcional: añadir puntos
# Línea vertical para el evento
geom_vline(xintercept = anio_evento, linetype = "dashed", color = "red", linewidth = 0.7) +
# Anotación para la línea vertical
# Ajustar y_posicion_annotation y x_posicion_annotation según sea necesario para que no se superponga mucho
annotate("text", x = anio_evento + 0.5, y = max(datos_procesados_servicios$proporcion_servicios_en_pais) * 0.95, # Posición de la etiqueta
label = etiqueta_evento, color = "red", size = 3, hjust = 0) + # hjust=0 para alinear a la izquierda del punto
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + # Más cortes en el eje x si es necesario
labs(
title = paste("Proporción del Empleo del Sector 'Servicios' en el Empleo Total del País"),
subtitle = paste("Años:", anio_inicio, "-", anio_fin, ". Países:", paste(paises_seleccionados, collapse=", ")),
x = "Año",
y = paste("Proporción del Empleo en", sector_analizado),
color = "País (ISO3)" # Leyenda del color
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "top", # Mover leyenda arriba para más espacio
plot.title = element_text(hjust = 0.5, size=14, face="bold"),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(angle = 45, hjust = 1, size=9),
axis.title = element_text(size=10),
panel.grid.minor = element_blank() # Quitar líneas menores de la cuadrícula
)
# Visualizar el gráfico estático (opcional)
# print(grafico_servicios_comparativo)
# 3. Convertir a gráfico interactivo con plotly
grafico_servicios_interactivo <- ggplotly(grafico_servicios_comparativo, tooltip = "text")
# Visualizar el gráfico interactivo
print(grafico_servicios_interactivo)
# guardar en carpeta "resultados"
ggsave("~/Downloads/Actividad Integradora/resultados/evolucion_empleo_peru.png",
plot = grafico_empleo,
width = 8,
height = 6,
dpi = 300)
# -----------------------------------------------------------------------------
# Consigna específica 4: Visualización compleja
# -----------------------------------------------------------------------------
----------------------------------------------------------------------------
library(tidyverse)
library(plotly)
library(htmlwidgets)
datos <- read_csv(ruta_base)
# 1. Procesamiento de datos para varios países, sector Servicios y rango de años específico
# Países seleccionados (los mismos que tenías)
paises_seleccionados <- c("PER", "ARG", "CHL", "COL", "BRA", "MEX")
anio_inicio <- 1988
anio_fin <- 2018
sector_analizado <- "Servicios"
anio_evento <- 1995
etiqueta_evento <- "Acceso a internet en incremento"
datos_procesados_servicios <- datos %>%
filter(iso3 %in% paises_seleccionados) %>%         # Filtrar por los países seleccionados
filter(anio >= anio_inicio & anio <= anio_fin) %>% # Filtrar por el rango de años
filter(gran_sector == sector_analizado) %>%        # Filtrar solo por el sector "Servicios"
group_by(iso3, anio, gran_sector) %>%              # Agrupar por país, año y gran sector
summarise(
empleo_total_gran_sector = sum(empleo_miles, na.rm = TRUE), # Empleo total para el sector Servicios
.groups = 'drop'
) %>%
# Necesitamos el empleo total ANUAL del PAÍS para calcular la proporción correctamente
# Para ello, primero calculamos el empleo total por país y año (sumando Bienes y Servicios)
# y luego lo unimos para calcular la proporción del sector Servicios.
left_join(
datos %>%
filter(iso3 %in% paises_seleccionados) %>%
filter(anio >= anio_inicio & anio <= anio_fin) %>%
group_by(iso3, anio) %>%
summarise(empleo_total_anual_pais_global = sum(empleo_miles, na.rm = TRUE), .groups = 'drop'),
by = c("iso3", "anio")
) %>%
mutate(
# Evitar división por cero si empleo_total_anual_pais_global es 0 o NA
proporcion_servicios_en_pais = ifelse(is.na(empleo_total_anual_pais_global) | empleo_total_anual_pais_global == 0,
0,
empleo_total_gran_sector / empleo_total_anual_pais_global)
) %>%
ungroup() %>%
filter(!is.na(proporcion_servicios_en_pais)) # Eliminar filas donde la proporción no se pudo calcular
# Verificar los datos procesados (opcional)
# Verificar los datos procesados (opcional)
# print(head(datos_procesados_servicios))
# print(paste("Años únicos:", paste(sort(unique(datos_procesados_servicios$anio)), collapse=", ")))
# Verificar los datos procesados (opcional)
# print(head(datos_procesados_servicios))
# print(paste("Años únicos:", paste(sort(unique(datos_procesados_servicios$anio)), collapse=", ")))
# print(paste("Países únicos:", paste(unique(datos_procesados_servicios$iso3), collapse=", ")))
# print(summary(datos_procesados_servicios$proporcion_servicios_en_pais))
# 2. Creación del gráfico con ggplot2
# Se detiene la ejecución si no hay datos, en lugar de solo mostrar un mensaje.
stop("No hay datos disponibles para el sector 'Servicios', los países y el rango de años seleccionados. No se puede generar el gráfico.")
} else {
grafico_servicios_comparativo <- ggplot(datos_procesados_servicios,
aes(x = anio,
y = proporcion_servicios_en_pais,
color = iso3, # Color por país
group = iso3, # Agrupar por país para líneas correctas
# Definir text para tooltip personalizado en plotly
text = paste("País:", iso3,
"<br>Año:", anio,
"<br>Sector:", gran_sector,
"<br>Proporción en Empleo Total del País:", scales::percent(proporcion_servicios_en_pais, accuracy = 0.1))
)) +
geom_line(linewidth = 0.8, alpha = 0.9) +
# geom_point(size = 1.5, alpha = 0.6) + # Opcional: añadir puntos
# Línea vertical para el evento
geom_vline(xintercept = anio_evento, linetype = "dashed", color = "red", linewidth = 0.7) +
# Anotación para la línea vertical
# Ajustar y_posicion_annotation y x_posicion_annotation según sea necesario para que no se superponga mucho
annotate("text", x = anio_evento + 0.5, y = max(datos_procesados_servicios$proporcion_servicios_en_pais) * 0.95, # Posición de la etiqueta
label = etiqueta_evento, color = "red", size = 3, hjust = 0) + # hjust=0 para alinear a la izquierda del punto
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + # Más cortes en el eje x si es necesario
labs(
title = paste("Proporción del Empleo del Sector 'Servicios' en el Empleo Total del País"),
subtitle = paste("Años:", anio_inicio, "-", anio_fin, ". Países:", paste(paises_seleccionados, collapse=", ")),
x = "Año",
y = paste("Proporción del Empleo en", sector_analizado),
color = "País (ISO3)" # Leyenda del color
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "top", # Mover leyenda arriba para más espacio
plot.title = element_text(hjust = 0.5, size=14, face="bold"),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(angle = 45, hjust = 1, size=9),
axis.title = element_text(size=10),
panel.grid.minor = element_blank() # Quitar líneas menores de la cuadrícula
)
# 3. Convertir a gráfico interactivo con plotly
grafico_servicios_interactivo <- ggplotly(grafico_servicios_comparativo, tooltip = "text")
# Visualizar el gráfico interactivo
print(grafico_servicios_interactivo)
# convertir a gráfico interactivo con plotly
grafico_servicios_interactivo <- ggplotly(grafico_servicios_comparativo, tooltip = "text")
print(grafico_servicios_interactivo)
# creación del gráfico con ggplot2
grafico_servicios_comparativo <- ggplot(datos_procesados_servicios,
aes(x = anio,
y = proporcion_servicios_en_pais,
color = iso3, # Color por país
group = iso3, # Agrupar por país para líneas correctas
# Definir text para tooltip personalizado en plotly
text = paste("País:", iso3,
"<br>Año:", anio,
"<br>Sector:", gran_sector,
"<br>Proporción en Empleo Total del País:", scales::percent(proporcion_servicios_en_pais, accuracy = 0.1))
)) +
geom_line(linewidth = 0.8, alpha = 0.9) +
# geom_point(size = 1.5, alpha = 0.6) + # Opcional: añadir puntos
# Línea vertical para el evento
geom_vline(xintercept = anio_evento, linetype = "dashed", color = "red", linewidth = 0.7) +
# Anotación para la línea vertical
# Ajustar y_posicion_annotation y x_posicion_annotation según sea necesario para que no se superponga mucho
annotate("text", x = anio_evento + 0.5, y = max(datos_procesados_servicios$proporcion_servicios_en_pais, na.rm = TRUE) * 0.95, # Posición de la etiqueta, añadido na.rm = TRUE a max()
label = etiqueta_evento, color = "red", size = 3, hjust = 0) + # hjust=0 para alinear a la izquierda del punto
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + # Más cortes en el eje x si es necesario
labs(
title = paste("Proporción del Empleo del Sector 'Servicios' en el Empleo Total del País"),
subtitle = paste("Años:", anio_inicio, "-", anio_fin, ". Países:", paste(paises_seleccionados, collapse=", ")),
x = "Año",
y = paste("Proporción del Empleo en", sector_analizado),
color = "País (ISO3)" # Leyenda del color
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "top", # Mover leyenda arriba para más espacio
plot.title = element_text(hjust = 0.5, size=14, face="bold"),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(angle = 45, hjust = 1, size=9),
axis.title = element_text(size=10),
panel.grid.minor = element_blank() # Quitar líneas menores de la cuadrícula
)
# convertir a gráfico interactivo con plotly
grafico_servicios_interactivo <- ggplotly(grafico_servicios_comparativo, tooltip = "text")
print(grafico_servicios_interactivo)
library(htmlwidgets)
datos <- read_csv(ruta_base)
paises_seleccionados <- c("PER", "ARG", "CHL", "COL", "BRA", "MEX")
anio_inicio <- 1988
anio_fin <- 2018
sector_analizado <- "Servicios"
anio_evento <- 1995
etiqueta_evento <- "Acceso a Internet en Incremento"
datos_procesados_servicios <- datos %>%
filter(iso3 %in% paises_seleccionados) %>%
filter(anio >= anio_inicio & anio <= anio_fin) %>%
filter(gran_sector == sector_analizado) %>%
group_by(iso3, anio, gran_sector) %>%
summarise(
empleo_total_gran_sector = sum(empleo_miles, na.rm = TRUE), # empleo total para el sector Servicios
.groups = 'drop'
) %>%
# se necesita el empleo total ANUAL del PAÍS para calcular la proporción correctamente
# Por eso: primero calculamos el empleo total por país y año (sumando Bienes y Servicios) y luego lo unimos para calcular la proporción del sector Servicios.
left_join(
datos %>%
filter(iso3 %in% paises_seleccionados) %>%
filter(anio >= anio_inicio & anio <= anio_fin) %>%
group_by(iso3, anio) %>%
summarise(empleo_total_anual_pais_global = sum(empleo_miles, na.rm = TRUE), .groups = 'drop'),
by = c("iso3", "anio")
) %>%
mutate(
# evitar división por cero si empleo_total_anual_pais_global es 0 o NA
proporcion_servicios_en_pais = ifelse(is.na(empleo_total_anual_pais_global) | empleo_total_anual_pais_global == 0,
0,
empleo_total_gran_sector / empleo_total_anual_pais_global)
) %>%
ungroup() %>%
filter(!is.na(proporcion_servicios_en_pais)) # Eliminar filas donde la proporción no se pudo calcular
# creación del gráfico con ggplot2
grafico_servicios_comparativo <- ggplot(datos_procesados_servicios,
aes(x = anio,
y = proporcion_servicios_en_pais,
color = iso3, # Color por país
group = iso3, # Agrupar por país para líneas correctas
# Definir text para tooltip personalizado en plotly
text = paste("País:", iso3,
"<br>Año:", anio,
"<br>Sector:", gran_sector,
"<br>Proporción en Empleo Total del País:", scales::percent(proporcion_servicios_en_pais, accuracy = 0.1))
)) +
geom_line(linewidth = 0.8, alpha = 0.9) +
# geom_point(size = 1.5, alpha = 0.6) + # Opcional: añadir puntos
# Línea vertical para el evento
geom_vline(xintercept = anio_evento, linetype = "dashed", color = "red", linewidth = 0.7) +
# Anotación para la línea vertical
# Ajustar y_posicion_annotation y x_posicion_annotation según sea necesario para que no se superponga mucho
annotate("text", x = anio_evento + 0.5, y = max(datos_procesados_servicios$proporcion_servicios_en_pais, na.rm = TRUE) * 0.95, # Posición de la etiqueta, añadido na.rm = TRUE a max()
label = etiqueta_evento, color = "red", size = 3, hjust = 0) + # hjust=0 para alinear a la izquierda del punto
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + # Más cortes en el eje x si es necesario
labs(
title = paste("Proporción del Empleo del Sector 'Servicios' en el Empleo Total del País"),
subtitle = paste("Años:", anio_inicio, "-", anio_fin, ". Países:", paste(paises_seleccionados, collapse=", ")),
x = "Año",
y = paste("Proporción del Empleo en", sector_analizado),
color = "País (ISO3)" # Leyenda del color
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "top", # Mover leyenda arriba para más espacio
plot.title = element_text(hjust = 0.5, size=14, face="bold"),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(angle = 45, hjust = 1, size=9),
axis.title = element_text(size=10),
panel.grid.minor = element_blank() # Quitar líneas menores de la cuadrícula
)
# convertir a gráfico interactivo con plotly
grafico_servicios_interactivo <- ggplotly(grafico_servicios_comparativo, tooltip = "text")
print(grafico_servicios_interactivo)
# guardar en carpeta "resultados"
ruta_guardado_html_servicios <- "~/Downloads/Actividad Integradora/resultados/comparacion_empleo_servicios_1988-2018.html"
saveWidget(grafico_servicios_interactivo, file = ruta_guardado_html_servicios, selfcontained = TRUE, title = "Comparación Empleo Servicios")
library(dplyr)
library(readr)
library(readxl)
# Rutas
ruta_diccionario <- "~/Downloads/Actividad Integradora/bases/diccionario_empleo_sectores_vars.xlsx"
ruta_base <- "~/Downloads/Actividad Integradora/bases/empleo_sectores_base.csv"
# diccionario de variables en caso sea necesario para referencias
diccionario <- read_excel(ruta_diccionario)
datos <- read_csv(ruta_base)
head(datos)
datos_modificados <- datos %>%
mutate(
empleo_ponderado = empleo_miles * share_empleo
)
#guardar en un nuevo csv
write_csv(datos_modificados, "~/Downloads/Actividad Integradora/bases/empleo_sectores_base_modificada.csv")
head(datos_modificados)
view(datos_modificados)
library(dplyr)
library(readr)
ruta_base <- "~/Downloads/Actividad Integradora/bases/empleo_sectores_base.csv"
datos <- read_csv(ruta_base)
datos_procesados <- datos %>%
filter(iso3 == "PER") %>% # Filtrar solo datos de Perú
group_by(anio, gran_sector) %>% # año y gran sector
summarise(
empleo_total_gran_sector = sum(empleo_miles, na.rm = TRUE) # empleo total por gran sector
) %>%
ungroup() %>%
group_by(anio) %>% # agrupar nuevamente por año
mutate(
empleo_total_anual = sum(empleo_total_gran_sector), # empleo total por año
proporcion_gran_sector = empleo_total_gran_sector / empleo_total_anual # proporción por gran sector
) %>%
ungroup()
#guardar la tabla en un nuevo csv
write_csv(datos_procesados, "~/Downloads/Actividad Integradora/bases/empleo_sectores_procesados.csv")
head(datos_modificados)
view(datos_modificados)
View(datos_modificados)
library(dplyr)
library(readr)
ruta_base <- "~/Downloads/Actividad Integradora/bases/empleo_sectores_base.csv"
datos <- read_csv(ruta_base)
datos_procesados <- datos %>%
filter(iso3 == "PER") %>% # Filtrar solo datos de Perú
group_by(anio, gran_sector) %>% # año y gran sector
summarise(
empleo_total_gran_sector = sum(empleo_miles, na.rm = TRUE) # empleo total por gran sector
) %>%
ungroup() %>%
group_by(anio) %>% # agrupar nuevamente por año
mutate(
empleo_total_anual = sum(empleo_total_gran_sector), # empleo total por año
proporcion_gran_sector = empleo_total_gran_sector / empleo_total_anual # proporción por gran sector
) %>%
ungroup()
#guardar la tabla en un nuevo csv
write_csv(datos_procesados, "~/Downloads/Actividad Integradora/bases/empleo_sectores_procesados.csv")
head(datos_procesados)
view(datos_procesados)
#guardar la tabla en un nuevo csv
write_csv(datos_procesados, "bases/empleo_sectores_procesados.csv")
head(datos_procesados)
View(datos_procesados)
# -----------------------------------------------------------------------------
# Consigna específica 3: Visualización simple
# -----------------------------------------------------------------------------
library(ggplot2)
library(dplyr)
datos_procesados3 <- datos %>%
filter(iso3 == "PER") %>%
group_by(anio, gran_sector) %>%
summarise(
empleo_total_gran_sector = sum(empleo_miles, na.rm = TRUE) # sumar el empleo total
) %>%
ungroup()
# gráfico de líneas
grafico_empleo <- ggplot(datos_procesados3, aes(x = anio, y = empleo_total_gran_sector, color = gran_sector)) +
geom_line(size = 1) + # Agregar líneas
geom_point(size = 2) + # Agregar puntos
labs(
title = "Evolución del Empleo Total por Gran Sector en Perú",
x = "Año",
y = "Empleo Total (en miles)",
color = "Gran Sector"
) +
theme_minimal() +
theme(
text = element_text(size = 12),
legend.position = "bottom"
)
print(grafico_empleo)
# guardar en carpeta "resultados"
ggsave("bases/evolucion_empleo_peru.png",
plot = grafico_empleo,
width = 8,
height = 6,
dpi = 300)
# -----------------------------------------------------------------------------
# Consigna específica 4: Visualización compleja
# -----------------------------------------------------------------------------
library(tidyverse)
library(plotly)
library(htmlwidgets)
datos <- read_csv(ruta_base)
paises_seleccionados <- c("PER", "ARG", "CHL", "COL", "BRA", "MEX")
anio_inicio <- 1988
anio_fin <- 2018
sector_analizado <- "Servicios"
anio_evento <- 1995
etiqueta_evento <- "Acceso a Internet en Incremento"
datos_procesados_servicios <- datos %>%
filter(iso3 %in% paises_seleccionados) %>%
filter(anio >= anio_inicio & anio <= anio_fin) %>%
filter(gran_sector == sector_analizado) %>%
group_by(iso3, anio, gran_sector) %>%
summarise(
empleo_total_gran_sector = sum(empleo_miles, na.rm = TRUE), # empleo total para el sector Servicios
.groups = 'drop'
) %>%
# se necesita el empleo total ANUAL del PAÍS para calcular la proporción correctamente
# Por eso: primero calculamos el empleo total por país y año (sumando Bienes y Servicios) y luego lo unimos para calcular la proporción del sector Servicios.
left_join(
datos %>%
filter(iso3 %in% paises_seleccionados) %>%
filter(anio >= anio_inicio & anio <= anio_fin) %>%
group_by(iso3, anio) %>%
summarise(empleo_total_anual_pais_global = sum(empleo_miles, na.rm = TRUE), .groups = 'drop'),
by = c("iso3", "anio")
) %>%
mutate(
# evitar división por cero si empleo_total_anual_pais_global es 0 o NA
proporcion_servicios_en_pais = ifelse(is.na(empleo_total_anual_pais_global) | empleo_total_anual_pais_global == 0,
0,
empleo_total_gran_sector / empleo_total_anual_pais_global)
) %>%
ungroup() %>%
filter(!is.na(proporcion_servicios_en_pais)) # Eliminar filas donde la proporción no se pudo calcular
# creación del gráfico con ggplot2
grafico_servicios_comparativo <- ggplot(datos_procesados_servicios,
aes(x = anio,
y = proporcion_servicios_en_pais,
color = iso3, # Color por país
group = iso3, # Agrupar por país para líneas correctas
# Definir text para tooltip personalizado en plotly
text = paste("País:", iso3,
"<br>Año:", anio,
"<br>Sector:", gran_sector,
"<br>Proporción en Empleo Total del País:", scales::percent(proporcion_servicios_en_pais, accuracy = 0.1))
)) +
geom_line(linewidth = 0.8, alpha = 0.9) +
# geom_point(size = 1.5, alpha = 0.6) + # Opcional: añadir puntos
# Línea vertical para el evento
geom_vline(xintercept = anio_evento, linetype = "dashed", color = "red", linewidth = 0.7) +
# Anotación para la línea vertical
# Ajustar y_posicion_annotation y x_posicion_annotation según sea necesario para que no se superponga mucho
annotate("text", x = anio_evento + 0.5, y = max(datos_procesados_servicios$proporcion_servicios_en_pais, na.rm = TRUE) * 0.95, # Posición de la etiqueta, añadido na.rm = TRUE a max()
label = etiqueta_evento, color = "red", size = 3, hjust = 0) + # hjust=0 para alinear a la izquierda del punto
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 8)) + # Más cortes en el eje x si es necesario
labs(
title = paste("Proporción del Empleo del Sector 'Servicios' en el Empleo Total del País"),
subtitle = paste("Años:", anio_inicio, "-", anio_fin, ". Países:", paste(paises_seleccionados, collapse=", ")),
x = "Año",
y = paste("Proporción del Empleo en", sector_analizado),
color = "País (ISO3)" # Leyenda del color
) +
theme_minimal(base_size = 11) +
theme(
legend.position = "top", # Mover leyenda arriba para más espacio
plot.title = element_text(hjust = 0.5, size=14, face="bold"),
plot.subtitle = element_text(hjust = 0.5, size=10),
axis.text.x = element_text(angle = 45, hjust = 1, size=9),
axis.title = element_text(size=10),
panel.grid.minor = element_blank() # Quitar líneas menores de la cuadrícula
)
# convertir a gráfico interactivo con plotly
grafico_servicios_interactivo <- ggplotly(grafico_servicios_comparativo, tooltip = "text")
print(grafico_servicios_interactivo)
# guardar en carpeta "resultados"
ruta_guardado_html_servicios <- "~/Downloads/Actividad Integradora/resultados/comparacion_empleo_servicios_1988-2018.html"
saveWidget(grafico_servicios_interactivo, file = ruta_guardado_html_servicios, selfcontained = TRUE, title = "Comparación Empleo Servicios")
